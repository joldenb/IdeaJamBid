doctype html
html
  head
    include ../partials/head.jade
  body
  .header.navbar.navbar-default
    include ../partials/header.jade

  .component-summary.container
    .col-md-4
      if !component['mainImage']['amazonURL'] && idea.name
        img(src="/ideaseed-image-placeholder.jpg" height="150" width="150")
      else
        if component.mainImage && component.mainImage.amazonURL
          .image-summary-image
            img#component-main-image(src=component.mainImage.amazonURL)
      if component['text'] && component['number']
        .component-name
          h1 Component # #{component['number']} : #{component['text'].charAt(0).toUpperCase() + component['text'].slice(1)}
      else if component['text']
        .component-name
          h1 #{component['text']}
      else
        .component-name
          if (component['descriptions'][0])
            h3 The suggestion of #{component['descriptions'][0]}
      br
      a.home-logout.btn.btn-industry.btn-lg( href="/component-profile/#{component.identifier}/edit") Edit Component

      if parentComponents && parentComponents.length > 0
        each parent, index in parentComponents
          h5 A subcomponent of #{parent['text'] || parent['descriptions'][0] || "No parent component name"}
        
      if (componentContributor)
        p Contributed by #[a(href='/imagineer/'+ componentContributor.nickname) #{componentContributor.nickname}]
  
      if ideaInventor
        h4 Part of <b>#[a(href='/ideas/'+ idea.name) #{idea.name}]</b> by #[a(href='/imagineer/'+ ideaInventor.nickname) #{ideaInventor.nickname}] 
      .return-button
        a.home-logout.btn.btn-industry.btn-lg( href="/ideas/#{idea.name}") Back to Idea Summary
      br
        

    .edit-column.col-md-8
      if imageURLs.length && imageURLs.length > 0
        .component-images
          h4 This component is contained within these images
          each imageURL, index in imageURLs
            .image-summary-image
              img(src=imageURL[1] height="100" width="100")

      .component-descriptions
        if component.text && component.descriptions && component.descriptions[0]
          h3 The #{component.text.toLowerCase()} of <b>#[a(href='/ideas/'+ idea.name) #{idea.name}]</b> is #{component.descriptions[0]}.
          if ( component['descriptions'].length > 1)
            h4 Additionally, the #{component.text} can be described as : 
            ul
              each description, index in component['descriptions']
                if index > 0
                  li #{description}
          else
            ul
              li.no-descriptions No More Descriptions Yet
  
      .idea-function-column
        if(problem != "none")
          br
          h4 Related Imperfection
          #idea-summary-problems
            include ../partials/problem-summary-element.jade

        //- .component-variants
        //-   br
        //-   h4 Included in Variants
        //-   if variantDates.length > 0
        //-     each variantDate in variantDates
        //-       ul.variantDateList
        //-         li
        //-           a(href="/ideas/#{idea.name}/variant/"+variantDate[1]) #{variantDate[0]}
        //-   else 
        //-     p <i>Not currently part of any variants</i>
      .component-dimensions
        if( component['dimensions'].length > 0)
          h3 The dimensions of #{component.text} are #{component['dimensions'][0]}.
          if( component['dimensions'].length  > 1)
            h4 Additionally, #{component.text} can be made to these dimensions:
            ul
              each dimension, index in component['dimensions']
                if dimension && index > 0
                  li #{dimension}
        else
          h5 <i>Component dimensions not entered yet.</i>

      .component-materials
        if( component['materials'].length > 0)
          h3 The #{component.text} is ideally made of #{component['materials'][0]}.
          if( component['materials'].length > 1)
            h4 Additionally, #{component.text} can be made of:
            ul
              each material, index in component['materials']
                if material && index > 0
                  li #{material}
        else
          h5 <i>Component materials not entered yet.</i>

      .related-components
        h4 Related Components
        if relatedComponents.length > 0
          each thisComponent in relatedComponents
            if thisComponent[0]['text']            
              if thisComponent[0]['identifier']
                li 
                  a(href="/component-profile/"+thisComponent[0]['identifier'])
                    h4.compName #{thisComponent[0]['number']} : #{thisComponent[0]['text']}
                  p <b>Relationship</b> 
                  p #{thisComponent[1].charAt(0).toUpperCase() + thisComponent[1].slice(1)}
                  if thisComponent[2]
                    h5 Sub-Component
                    p #{thisComponent[2]}
              else
                li 
                  h4.compName #{thisComponent[0]['number']} : #{thisComponent[0]['text']}
                  p <b>Relationship</b> 
                  p #{thisComponent[1].charAt(0).toUpperCase() + thisComponent[1].slice(1)}
                  if thisComponent[2]
                    h5 Sub-Component
                    p #{thisComponent[2]}
            else if thisComponent[0]['descriptions'].length > 0
              if thisComponent[0]['identifier']
                li
                  a(href="/component-profile/"+thisComponent[0]['identifier'])
                    h4.compName #{thisComponent[0]['descriptions'][0]}
                  p <b>Relationship</b> 
                  p #{thisComponent[1].charAt(0).toUpperCase() + thisComponent[1].slice(1)}
                  if thisComponent[2]
                    h5 Sub-Component
                    p #{thisComponent[2]}
            else
                li
                  h4.compName #{thisComponent[0]['descriptions'][0]}
                  p <b>Relationship</b> 
                  p #{thisComponent[1].charAt(0).toUpperCase() + thisComponent[1].slice(1)}
                  if thisComponent[2]
                    h5 Subcomponent
                    p #{thisComponent[2]}
        else
          div <i>No related components yet</i>

    #addComponentModal.modal.fade.annotate-modal(role="dialog")
      .modal-dialog
        .modal-content
          .modal-header
            button(type="button", class="close" data-dismiss="modal") &times;
            .modal-title 
              h2 #{user.nickname}, add a new subcomponent of the #{component['text']}
          .modal-body
            form(role='form', id="addIdeaComponent" action="/add-idea-component", method="post", style='max-width: 450px;', data-idea-doc=idea)
              .form-group
                h4 What is your new subcomponent called?
                input#componentName.form-control(type="text", name="componentName", value='The ...')
                input(type="hidden", name="_csrf", value="#{csrfToken}")
                p (Example: "The subcomponent named the destination time display")
                if componentName
                  h4 How does your #{componentName['text']} work?
                else
                  h4 How does your new subcomponent work?
                input#componentDescription.form-control(type="text", name="componentDescription", value='This subcomponent works by ')
                p (Example: "This subcomponent works by displaying the time you wish to travel to.")
                p.compDescrCharRemaining
              .modal-footer
                button.btn.btn-go.btn-block.btn-lg#componentSubmit(type='submit') Save Subcomponent
                button.btn.btn-info.btn-block.btn-lg(data-dismiss="modal") Cancel


    #myModal.modal.fade.annotate-modal(role="dialog")
      .modal-dialog
        .modal-content
          .modal-header
            button(type="button", class="close" data-dismiss="modal") &times;
            .modal-title 
              h2 Add a Related Component:
          .modal-body
            form(role='form', id="addRelatedComponent" action="/add-related-component", method="post", style='max-width: 450px;', data-idea-doc=idea)
              .form-group
                h4 #{user.nickname}, select another <b>#[a(href='/ideas/'+ idea.name) #{idea.name}]</b> component that this #{component['text']} component relates to:
                |  
                input(type="hidden", name="_csrf", value="#{csrfToken}")
                select(name="addRelatedComponent").form-control#relatedComponents
                  option(value="None Selected") None Selected
                  each thisComponent in components
                    if thisComponent['identifier'] && thisComponent['text']!=component['text']
                      if thisComponent['text']
                        option(value=thisComponent['identifier']) #{thisComponent['number']} : #{thisComponent['text']}
                      else if thisComponent['descriptions'].length > 0
                        if thisComponent['identifier']
                          option(value=thisComponent['identifier']) #{thisComponent['descriptions'][0]}
                #relatedCompDescription
                  h4#new-related-component-description Describe the relationship of these components:
                  |  
                  textarea.form-control(rows='6', cols="75", name="newRelatedComponentDesc", id="newRelCompDesc")
                  p Example: "The Flux Capacitor relates to the Mr. Fusion by channeling the 1.21 gigawatts captured by Mr. Fusion through the time circuits of the Flux Capacitor."
                  p#charactersRemaining 200 characters remaining.
                  br
                  input(type="checkbox", name="subComponent")
                  span#sub-component-checkbox
                input(type="hidden" id="component-identifier" name="component-identifier" value="#{component['identifier']}")

              .modal-footer
                button.btn.btn-info(data-dismiss="modal") Cancel
                button.btn.btn-success#newRelCompSubmit(type='submit') Save Component Relationship
                  img.einstein-point-btn-icon(src="/single-einstein-point.png")
                // This needs a fix here - crashing the app when no specific related component selected in the drop down but the submit button is clicked anyway

    #addTitleModal.modal.fade.annotate-modal(role="dialog")
      .modal-dialog
        .modal-content
          .modal-header
            button(type="button", class="close" data-dismiss="modal") &times;
            .modal-title 
              h2 #{user.nickname}, add a title for this component:
          .modal-body
            form(role='form', id="addComponentTitle" action="/add-component-title", method="post", data-idea-doc=idea)
              .form-group
                input(type="hidden", name="_csrf", value="#{csrfToken}")
                input.form-control(name="compTitle", id="compTitle" value="The ...")
                input(type="hidden" id="title-component-identifier" name="component-identifier" value="#{component['identifier']}")
                p (Example: "Pizza hydrator")

              .modal-footer
                button.btn.btn-info(data-dismiss="modal") Cancel
                button.btn.btn-success#componentTitleSubmit(type='submit') Save Component Title

  script(src='/exif.js')
  include ../partials/js-includes.jade
  script(type="text/javascript").
    $(document).ready(function(){
      if("!{component.text}" == ""){
        $('#addTitleModal').modal('show');
      }

      $(".upvote-imperfection").click(function(event){
        event.preventDefault();

          $.post('/upvote-imperfection', 
          {
            _csrf : $('[name="_csrf"]').val(),
            problem : $(this)[0].dataset['problemId']
          },
          function(data, response) {
            window.location.reload(true);          
          });
        return false;
      });        
    });

