doctype html
html
  head
    include ../partials/head.jade
  body(onload="init();")
  .header
    span.userName Howdy #{user.username}
    |  
    img(src="/avatar.png" height="75" width="75")
    a.home-logout.btn.btn-default( href="/begin" ) My Profile
    | 
    a.home-logout.btn.btn-default( href="/logout" ) Log Out

  
    #myModal.modal.fade.annotate-modal(role="dialog")
      .modal-dialog
        .modal-content
          .modal-header
            button(type="button", class="close" data-dismiss="modal") &times;
            .modal-title 
              h2 Contribute an Idea
          .modal-body
            form(role='form', id="saveComponent" action="/save-component", method="post", style='max-width: 300px;', data-idea-doc=idea)
              .form-group
                h3 New Component:
                |  
                input.form-control.ui-front(type='text', name="component", id="componentName", placeholder='This is called...', autocomplete="on")
                h4#new-idea-description Description:
                |  
                textarea.form-control(rows='6', cols="75", name="description", id="description",
                  placeholder='Describe the new component...')
          .modal-footer
            // button.btn.btn-info(data-dismiss="modal") Cancel
            button.btn.btn-success#submit(type='submit') Save

  button(type="button" id="modalButton" style="display:none;" class="btn btn-primary" data-toggle="modal" data-target="#myModal") Go Win Fight

  .container.annotate-image-container
      if (imgURL)
        canvas(id="myCanvas", width="1000", height="700", style="border:1px solid #d3d3d3;")
        img.summary-image(id="scream", src=imgURL, data-original="http://www.example.com/my-dummy-image-path", style="display:none;")
      each value in comps
        canvas.component(id="component-#{value['number']}", width="1000", height="700", style="border:1px solid #d3d3d3;")
    #componentList
      each value in comps
        .individual-component
          img.delete-component(data-component="#{value.text}" src="/delete.png" height="25" width="25")
          h4 #{value.number}. #{value.text}
      br
      br
      a#save-annotations.btn.btn-success( href="/image-upload" ) Save Annotations >
      h4 Click on the image to add features/components
      .checkbox
        input#show-annotations(type="checkbox", href="/image-upload", value="show-annotations", checked, name="show-annotations")
        label(for="show-annotations") Show Annotations


      

  include ../partials/js-includes.jade
  script(type="text/javascript").
    var canvas = document.getElementById("myCanvas");
    var ctx = canvas.getContext("2d");
    var firstClickX, secondClickX;
    var firstClickY, secondClickY;
    var componentNumber = parseInt("!{nextNumber}");

    window.onload = function() {
        var img = document.getElementById("scream");
        ctx.drawImage(img, 200, 150, 600, 400);
        var textCoordX, textCoordY;

        var firstX, firstY, secondX, secondY;
        var comps = JSON.parse('!{compsString}');
        for (var i=0; i < comps.length; i++){
          firstX  = comps[i].firstX;
          firstY  = comps[i].firstY;
          secondX = comps[i].secondX;
          secondY  = comps[i].secondY;

          if(comps[i]['number']) {
            canvas = document.getElementById("component-" + comps[i]['number']);
            ctx = canvas.getContext("2d");
            ctx.beginPath();
            ctx.moveTo(firstX, firstY);
            ctx.lineTo(secondX, secondY);
            ctx.stroke(); 

            ctx.font="20px Helvetica";
            if(secondX > 800){
              textCoordX = (secondX*1 + 20);
              textCoordY = secondY;
            } else if(secondX < 200){
              textCoordX = secondX - 20;
              textCoordY = secondY;
            } else if(secondY > 550){
              textCoordX = secondX;
              textCoordY = (secondY*1 + 20);
            } else if(secondY < 150){
              textCoordX = secondX;
              textCoordY = secondY - 20;
            }
            ctx.fillText(comps[i]['number']+".",textCoordX,textCoordY);

          }
        }
    };
    
    $('canvas').click(function(e){

        firstClickX = e.offsetX;
        firstClickY = e.offsetY;

        if(firstClickY  - .63*firstClickX > 24){
          if(firstClickY + .63*firstClickX > 654){
            secondClickX = firstClickX;
            secondClickY = 580;
          } else {
            secondClickX = 170;
            secondClickY = firstClickY;
          }
        } else {
          if(firstClickY + .63*firstClickX > 654){
            secondClickX = 830;
            secondClickY = firstClickY;
          } else {
            secondClickX = firstClickX;
            secondClickY = 120;
          }
        }


        $("#modalButton").click();
    });

    $("#submit").click(function(event){
      event.preventDefault();
      $("#imageName").val("#{imageName}");


      var textCoordX, textCoordY;
        var data = {
          component : $("#componentName").val(),
          firstX    : firstClickX,
          firstY    : firstClickY,
          secondX   : secondClickX,
          secondY   : secondClickY,
          imageName : "#{imageName}",
          number    : componentNumber,
          description  : $("#description").val()
        };
      
      

      $.post('/save-component', data, function(resp) {
        $("#componentName").val('');
        $("#existingComponents option[value='None Selected']").prop({'selected': true});
        $("#myModal").modal('hide');

        $("<canvas class='component' id='component-"+data['number']+"' width='1000' height='700' style='border:1px solid #d3d3d3;'>").insertAfter("#myCanvas").
        click(function(e){

          firstClickX = e.offsetX;
          firstClickY = e.offsetY;

          if(firstClickY  - .63*firstClickX > 24){
            if(firstClickY + .63*firstClickX > 654){
              secondClickX = firstClickX;
              secondClickY = 580;
            } else {
              secondClickX = 170;
              secondClickY = firstClickY;
            }
          } else {
            if(firstClickY + .63*firstClickX > 654){
              secondClickX = 830;
              secondClickY = firstClickY;
            } else {
              secondClickX = firstClickX;
              secondClickY = 120;
            }
          }
          $("#modalButton").click();
        });;

        canvas = document.getElementById("component-"+data['number']);
        var ctx = canvas.getContext("2d");
        ctx.beginPath();
        ctx.moveTo(firstClickX, firstClickY);
        ctx.lineTo(secondClickX, secondClickY);
        ctx.stroke(); 

        ctx.font="20px Helvetica";
        if(secondClickX > 800){
          textCoordX = (secondClickX*1 + 20);
          textCoordY = secondClickY;
        } else if(secondClickX < 200){
          textCoordX = secondClickX - 20;
          textCoordY = secondClickY;
        } else if(secondClickY > 550){
          textCoordX = secondClickX;
          textCoordY = (secondClickY*1 + 20);
        } else if(secondClickY < 150){
          textCoordX = secondClickX;
          textCoordY = secondClickY - 20;
        }
        ctx.fillText(data['number']+".",textCoordX,textCoordY);

        if($("#componentList .individual-component:last-of-type").length == 0){
          $("<div class='individual-component'><img class='delete-component' data-component='"+ data['component']+"' src='/delete.png' height='25' width='25'><h4>"+ data['number']+". "+ data['component']+"</h4></div>").
            prependTo("#componentList");
        } else {
          $("<div class='individual-component'><img class='delete-component' data-component='"+ data['component']+"' src='/delete.png' height='25' width='25'><h4>"+ data['number']+". "+ data['component']+"</h4></div>").
            insertAfter("#componentList .individual-component:last-of-type");
        }


        componentNumber++;
      });      
    });

    $('body').on('click', 'img.delete-component', function() {
      var data = {
        componentName : $(this)[0].dataset.component,
        imageName : "#{imageName}"
      }

      $.post("/delete-image-component", data, function(resp){
        $("img.delete-component[data-component='" + resp.deletedComponent +"']").next().fadeOut(200, function() {
          $("img.delete-component[data-component='" + resp.deletedComponent +"']").next().remove();
        });
        $("img.delete-component[data-component='" + resp.deletedComponent +"']").fadeOut(200, function() {
          $("img.delete-component[data-component='" + resp.deletedComponent +"']").remove();
        });
        $("canvas#component-"+resp.deletedCompNumber).remove();
      });
    });

    $('#saveComponent').on('keyup keypress', function(e) {
      var keyCode = e.keyCode || e.which;
      if (keyCode === 13) { 
        e.preventDefault();
        return false;
      }
    });

    $("#show-annotations").change(function(event){
      if(this.checked){
        $("canvas.component").show();
      } else {
        $("canvas.component").hide();
      }
    });

    $("#myModal").on('shown.bs.modal', function(){
      var componentList = _.map(JSON.parse('!{masterComponentsString}'), function(item){return item['text'];})
      $("#componentName").autocomplete({
        source : componentList,
        appendTo : "#saveComponent"
      });
    });

