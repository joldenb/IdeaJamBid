doctype html
html
  head
    include ../partials/head.jade
  body()
  .header.navbar.navbar-default
    include ../partials/header.jade
  
    #myModal.modal.fade.annotate-modal(role="dialog")
      .modal-dialog
        .modal-content
          .modal-header
            button(type="button", class="close", data-dismiss="modal", id="close-modal") &times;
            .modal-title 
              h2 Describe the part of your invention that you just clicked:
          .modal-body
            form(role='form', id="saveComponent" action="/save-component", method="post", style='max-width: 400px;', data-idea-doc=idea)
              .form-group
                |  
                input.form-control.ui-front(type='text', name="component", id="componentName", value='The component named the', autocomplete="on")
                p.example-text (Example: 'The component named the flux capacitor.')
                input(type="hidden", name="_csrf", value="#{csrfToken}")
                input(type="hidden" id="previous-title" name="previousTitle")
          .modal-footer
            // button.btn.btn-info(data-dismiss="modal") Cancel
            button.btn.btn-success#submit(type='submit') Save Component Tag

    button(type="button" id="modalButton" style="display:none;" class="btn btn-primary" data-toggle="modal" data-target="#myModal") Go Win Fight

  .container-fluid.annotate-image-container
    .row
      h2 Tag this image with components of idea.name:
      h3 You should tag as many components of idea.name as you can because your tags will explain what idea.name is to the world.  Also, you will earn 10 einstein points for each tag.
      h4 Click on the image to tag components of your idea.name, then click "Save Tagged Components" when finished:

      // For Joe to Fix - before the components the idea.name should appear, but it won't come through here.  Also the above language should come through differently to the inventor ("your tags will appear as components in the idea.name profile") and to third party viewers ("your tags will appear as suggestions to the inventor of idea.name")

    .row#image-title
      if imageTitle != ""
        a#edit-image-title
          h3 #{imageTitle.charAt(0).toUpperCase() + imageTitle.slice(1)}
            span
              img(src="/pencil.png" style="height:1em; vertical-align:baseline; padding-left:.3em;")
      else
        a#edit-image-title
          h2.enter-title-text <i>Create a descriptive name for this image</i>
            span
              img(src="/pencil.png" style="height:1em; vertical-align:baseline; padding-left:.3em;")
    .row
      .col-md-2
        #componentList
          #listOfComponents
            each value in comps
              .individual-component
                img.delete-component(data-component="#{value.text}" src="/delete.png" height="25" width="25")
                img(class='edit-annotation' data-component="#{value.text}" data-toggle='modal' data-target='#myModal' src="/pencil.png" height="25" width="25")
                h4 #{value.number}. #{value.text}
          br
          br
          a#save-annotations.btn.btn-success( href="/image-upload" ) Save Tagged Components

          .checkbox
      .col-md-10
        if (imgURL)
          canvas(id="myCanvas", width="1000", height="700", style="border:1px solid #d3d3d3;")
          img.summary-image(id="scream", src=imgURL, data-original="http://www.example.com/my-dummy-image-path", style="display:none;" + imageStyle)
        each value in comps
          canvas.component(id="component-#{value['number']}", width="1000", height="700", style="border:1px solid #d3d3d3;")


      

  include ../partials/js-includes.jade
  script(type="text/javascript").
    var canvas = document.getElementById("myCanvas");
    var ctx = canvas.getContext("2d");
    var firstClickX, secondClickX;
    var firstClickY, secondClickY;
    var componentNumber = parseInt("!{nextNumber}");

    window.onload = function() {
        var img = document.getElementById("scream");
        ctx.translate(500, 350);
        if('!{imageStyle}'.indexOf("rotate(90deg)") > -1){
          ctx.rotate(90*Math.PI/180);
        }
        if('!{imageStyle}'.indexOf("rotate(180deg)") > -1){
          ctx.rotate(180*Math.PI/180);
        }
        if('!{imageStyle}'.indexOf("rotate(270deg)") > -1){
          ctx.rotate(270*Math.PI/180);
        }
        
        ctx.drawImage(img, -300, -200, 600, 400);

        var textCoordX, textCoordY;

        var firstX, firstY, secondX, secondY;
        var comps = JSON.parse('!{compsString}');
        for (var i=0; i < comps.length; i++){
          firstX  = comps[i].firstX;
          firstY  = comps[i].firstY;
          secondX = comps[i].secondX;
          secondY  = comps[i].secondY;

          if(comps[i]['number']) {
            canvas = document.getElementById("component-" + comps[i]['number']);
            ctx = canvas.getContext("2d");
            ctx.beginPath();
            ctx.moveTo(firstX, firstY);
            ctx.lineTo(secondX, secondY);
            ctx.stroke(); 

            ctx.font="20px Helvetica";
            if(secondX > 800){
              textCoordX = (secondX*1 + 20);
              textCoordY = secondY;
            } else if(secondX < 200){
              textCoordX = secondX - 20;
              textCoordY = secondY;
            } else if(secondY > 550){
              textCoordX = secondX;
              textCoordY = (secondY*1 + 20);
            } else if(secondY < 150){
              textCoordX = secondX;
              textCoordY = secondY - 20;
            }
            ctx.fillText(comps[i]['number']+".",textCoordX,textCoordY);

          }
        }
    };
    
    $('canvas').click(function(e){

        if($("#componentName").val() != "The component named the "){
          $("#componentName").val("The component named the ");
        }
        firstClickX = e.offsetX;
        firstClickY = e.offsetY;

        if(firstClickY  - .63*firstClickX > 24){
          if(firstClickY + .63*firstClickX > 654){
            secondClickX = firstClickX;
            secondClickY = 580;
          } else {
            secondClickX = 170;
            secondClickY = firstClickY;
          }
        } else {
          if(firstClickY + .63*firstClickX > 654){
            secondClickX = 830;
            secondClickY = firstClickY;
          } else {
            secondClickX = firstClickX;
            secondClickY = 120;
          }
        }


        $("#modalButton").click();
    });

    $("#submit").click(function(event){
      event.preventDefault();
      $("#imageName").val("#{imageName}");

      if($("#previous-title").val() && $("#previous-title").val() != ""){
        // if there is a previous title, then the user is editing an already existing component.
        var data = {
          _csrf : $('[name="_csrf"]').val(),
          previousTitle : $("#previous-title").val(),
          newTitle      : $("#componentName").val(),
          previousDescription : $("#previous-description").val(),
          newDescription : $("#description").val()
        };

        $.post('/edit-component', data, function(response) {
          //update the list of components with the new component name
          location.reload();
        });
      } else {
      

        var textCoordX, textCoordY;
          var data = {
            _csrf : $('[name="_csrf"]').val(),
            component : $("#componentName").val(),
            firstX    : firstClickX,
            firstY    : firstClickY,
            secondX   : secondClickX,
            secondY   : secondClickY,
            imageName : "#{imageName}",
            number    : componentNumber,
            description  : $("#description").val()
          };
        
        

        $.post('/save-component', data, function(resp) {
          $("#componentName").val('The component named the ');
          $("#description").val('');
          $("#existingComponents option[value='None Selected']").prop({'selected': true});
          $("#myModal").modal('hide');

          $("<canvas class='component' id='component-"+data['number']+"' width='1000' height='700' style='border:1px solid #d3d3d3;'>").insertAfter("#myCanvas").
          click(function(e){

            firstClickX = e.offsetX;
            firstClickY = e.offsetY;

            if(firstClickY  - .63*firstClickX > 24){
              if(firstClickY + .63*firstClickX > 654){
                secondClickX = firstClickX;
                secondClickY = 580;
              } else {
                secondClickX = 170;
                secondClickY = firstClickY;
              }
            } else {
              if(firstClickY + .63*firstClickX > 654){
                secondClickX = 830;
                secondClickY = firstClickY;
              } else {
                secondClickX = firstClickX;
                secondClickY = 120;
              }
            }
            $("#modalButton").click();
          });;

          canvas = document.getElementById("component-"+data['number']);
          var ctx = canvas.getContext("2d");
          ctx.beginPath();
          ctx.moveTo(firstClickX, firstClickY);
          ctx.lineTo(secondClickX, secondClickY);
          ctx.stroke(); 

          ctx.font="20px Helvetica";
          if(secondClickX > 800){
            textCoordX = (secondClickX*1 + 20);
            textCoordY = secondClickY;
          } else if(secondClickX < 200){
            textCoordX = secondClickX - 20;
            textCoordY = secondClickY;
          } else if(secondClickY > 550){
            textCoordX = secondClickX;
            textCoordY = (secondClickY*1 + 20);
          } else if(secondClickY < 150){
            textCoordX = secondClickX;
            textCoordY = secondClickY - 20;
          }
          ctx.fillText(data['number']+".",textCoordX,textCoordY);

          if(data['component'].slice(16).indexOf("the ") == 0 || data['component'].slice(16).indexOf("The ") == 0){
            data['component'] = data['component'].slice(4)
          }

          if($("#listOfComponents .individual-component").length == 0){
            $("<div class='individual-component'><img class='delete-component' data-component='"+ data['component'].slice(16)+"' src='/delete.png' height='25' width='25'><img class='edit-annotation' data-component='"+ data['component'].slice(16)+"' data-toggle='modal' data-target='#myModal' src='/pencil.png' height='25' width='25'><h4>"+ data['number']+". "+ data['component'].slice(16)+"</h4></div>").
              appendTo("#listOfComponents");
          } else {
            $("<div class='individual-component'><img class='delete-component' data-component='"+ data['component'].slice(16)+"' src='/delete.png' height='25' width='25'><img class='edit-annotation' data-component='"+ data['component'].slice(16)+"' data-toggle='modal' data-target='#myModal' src='/pencil.png' height='25' width='25'><h4>"+ data['number']+". "+ data['component'].slice(16)+"</h4></div>").
              insertAfter("#listOfComponents div:last-of-type");
          }

          $(".edit-annotation").click(function(){
            $.get("/get-last-component-description", $(this)[0].dataset, function(response){
              if(response["description"]){
                $("textarea#description").val(response["description"]);
                $("#previous-description").val(response["description"]);
              }

              if(response["identifier"] && $(".modal-footer .btn-info").length == 0){
                $(".modal-footer").prepend('<a type="button" class="btn btn-info" href=/component-profile/'+ response["identifier"] +'>Component Profile</a>')
              }

              $("input#componentName").val("The component named the " + response["title"]);
              $("#previous-title").val(response["title"]);
            });
          });


          componentNumber++;
        });
      }
    });

    $(".edit-annotation").click(function(){
      $.get("/get-last-component-description", $(this)[0].dataset, function(response){
          if(response["description"]){
            $("textarea#description").val(response["description"]);
            $("#previous-description").val(response["description"]);
          }

          if(response["identifier"]){
            $(".modal-footer").prepend('<a type="button" class="btn btn-info" href=/component-profile/'+ response["identifier"] +'>Component Profile</a>')
          }

          $("input#componentName").val("The component named the " + response["title"]);
          $("#previous-title").val(response["title"]);
      });
    });


    $('body').on('click', 'img.delete-component', function() {
      var data = {
        _csrf : $('[name="_csrf"]').val(),
        componentName : $(this)[0].dataset.component,
        imageName : "#{imageName}"
      }

      $.post("/delete-image-component", data, function(resp){
        $("img.delete-component[data-component='" + resp.deletedComponent +"']").next().fadeOut(200, function() {
          $("img.delete-component[data-component='" + resp.deletedComponent +"']").next().remove();
        });
        $("img.delete-component[data-component='" + resp.deletedComponent +"']").fadeOut(200, function() {
          $("img.delete-component[data-component='" + resp.deletedComponent +"']").remove();
        });
        $("canvas#component-"+resp.deletedCompNumber).remove();
      });
    });

    $('#saveComponent').on('keyup keypress', function(e) {
      var keyCode = e.keyCode || e.which;
      if (keyCode === 13) { 
        e.preventDefault();
        return false;
      }
    });

    $("#close-modal").click(function(event){
      $(".modal-footer .btn-info").remove();
      $("#previous-title").val("");
    });

    $("#myModal").on('hide.bs.modal', function(){
      $(".modal-footer .btn-info").remove();
      $("#previous-title").val("");
    });

    $("#myModal").on('shown.bs.modal', function(){
      var componentList = _.map(JSON.parse('!{masterComponentsString}'), function(item){return item['text'];})
      $("#componentName").autocomplete({
        source : componentList,
        appendTo : "#saveComponent"
      });
    });

    var input = $("#componentName");
    // This is for the main solution text input
    var requiredText = "The component named the "
    input[0].addEventListener ("mousedown", function () {
      if (String($(this).val()).indexOf(requiredText) == -1) {
            $(this).val(requiredText);
      }
      if (this.selectionStart < 16) {
        this.selectionStart = 16;
      }
    }, false);

    input[0].addEventListener ("keydown", function () {
      if (String($(this).val()).indexOf(requiredText) == -1) {
            $(this).val(requiredText);
      }
      if (this.selectionStart < 16) {
        this.selectionStart = 16;
      }
    }, false);

    $("#edit-image-title").click(function(event){
      $("#edit-image-title").hide();
      $("#image-title").append("<input type='text' id='new-title-input' value='Name this image'><input type='hidden', name='_csrf', value='!{csrfToken}'><button id='edit-image-title-save' class='btn btn-go btn-sm'>Save</button>");

      var titleInput = $("#new-title-input");
      // This is for the main solution text input
      var requiredTitleText = "The "
      titleInput[0].addEventListener ("mousedown", function () {
        if (String($(this).val()).indexOf(requiredTitleText) == -1 || String($(this).val()) == "Enter image title") {
              $(this).val(requiredTitleText);
        }
        if (this.selectionStart < requiredTitleText.length) {
          this.selectionStart = requiredTitleText.length;
        }
      }, false);

      titleInput[0].addEventListener ("keydown", function () {
        if (String($(this).val()).indexOf(requiredTitleText) == -1 || String($(this).val()) == "Enter image title") {
              $(this).val(requiredTitleText);
        }
        if (this.selectionStart < requiredTitleText.length) {
          this.selectionStart = requiredTitleText.length;
        }
      }, false);

      $("#edit-image-title-save").click(function(event){
        if($("#new-title-input").val() != "Enter image title"){
          var data = {
            newTitle : $("#new-title-input").val().slice(4),
            _csrf : $('[name="_csrf"]').val(),
            imageFilename : "!{imageName}"
          }
          $.post("/add-image-title", data, function(response){
            window.location.reload();
          })
        } else {
          window.location.reload();
        }
      })
    });

