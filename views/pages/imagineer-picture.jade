doctype html
html
  head
    include ../partials/head.jade
  body
  .header
    include ../partials/header.jade

  .container
    .imagesList
      if(imageURLs)
        h3 Current Picture
        each imageURL, index in imageURLs
          if imageURL[0] == profilePictureFilename
            .image-summary-image
              img(src=imageURL[1] height="300" width="400", id=imageURL[0] style=imageURL[2])
        h3 Select a different Picture
        each imageURL, index in imageURLs
          if imageURL[0] != profilePictureFilename
            a
              img.imageListItems(src=imageURL[1], id=imageURL[0] style=imageURL[2])
        .view-all-images-btn
          a#resetPicture.btn.btn-default() Set Profile Image
    form(role='form', id="headshotForm" action="/add-profile-headshot", method="post", data-idea-doc=idea, enctype="multipart/form-data")
      .form-group
        h3 Upload a new User Profile Picture
        |  
        input#headshotButton(type="file", name="picture")
        input(type="hidden", name="_csrf", value="#{csrfToken}")
        br
    a.home-logout.btn.btn-default( href="/imagineer/" + user.username) User Profile
          


  include ../partials/js-includes.jade
  script(src='/exif.js')
  script(type="text/javascript").
    /* document.getElementById("headshotButton").onchange = function() {
      document.getElementById("headshotForm").submit();
    }; */

    document.getElementById("headshotButton").onchange = function(event) {
      const files = document.getElementById('headshotButton').files;
      const file = files[0];
      if(file == null){
        return alert('No file selected.');
      }
      var fr   = new FileReader;
      
      fr.onloadend = function() {
        // get EXIF data
        var exif = EXIF.readFromBinaryFile(this.result);

        if(file.size < 3000000){
          getSignedRequest(file, exif);
        } else if (file.size > 3000000){
          alert('Please choose an image smaller than 3 MB.')
        } else {
          alert('An error ocurred with this image.')
        }

      };

      fr.readAsArrayBuffer(file); // read the file
    };

    function uploadFile(file, signedRequest, url, exif){
      const xhr = new XMLHttpRequest();
      xhr.open('PUT', signedRequest);
      xhr.onreadystatechange = function() {
        if(xhr.readyState === 4){
          if(xhr.status === 200 && (file.type=="image/jpeg" || file.type=="image/png")){
            var data = {"filename" : file.name, "fileUrl" : url, "type" : file.type,
            exif : exif , "_csrf" : $('[name="_csrf"]').val()};
            $(".image-summary-image img").attr("src", url);
            $.post('/add-profile-headshot', data , function(response, status){
              window.location.reload();
            });
          }
          else{
            alert('Could not upload file.');
          }
        }
      };
      xhr.send(file);
    }

    function getSignedRequest(file, exif){
      const xhr = new XMLHttpRequest();
      xhr.open('GET', '/sign-s3?file-name='+file.name + '&file-type='+ file.type);
      xhr.onreadystatechange = function() {
        if(xhr.readyState === 4){
          if(xhr.status === 200){
            var response;
            if(xhr.responseText == ""){
              response = JSON.parse('{}');
            } else {
              response = JSON.parse(xhr.responseText);
            }
            uploadFile(file, response.signedRequest, response.url, exif);
          }
          else{
            alert('Could not get signed URL.');
          }
        }
      };
      xhr.send();
    }


    $("a img").click(function(event){
      $(".selectedProfilePic").removeClass("selectedProfilePic");
      $(this).addClass("selectedProfilePic");
    });

    $("#resetPicture").click(function(event){
      var data = {
        "_csrf" : $('[name="_csrf"]').val(),
        "newPictureFilename" : $(".selectedProfilePic").attr("id")
      };

      $.post("/set-existing-profile-pic", data, function(data, response) {
        window.location.reload();
      });
    });