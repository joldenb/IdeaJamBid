doctype html
html
  head
    include ../partials/head.jade
  body
  .header
    span.userName Howdy #{user.username}
    |  
    img(src="/avatar.png" height="75" width="75")
    a.home-logout.btn.btn-default( href="/begin" ) My Profile
    | 
    a.home-logout.btn.btn-default( href="/logout" ) Log Out

  .idea-summary
    h3 Idea Summary for #{idea.name}

    .edit-column.half-column
      .imagesList
        if(imageURLs)
          h4 Uploaded Images
          each imageURL, index in imageURLs
            if index == 0
              .image-summary-image
                img(src=imageURL[1] height="300" width="400")
            if index < 3
              img.imageListItems(src=imageURL[1])
          a.btn.btn-default( href="/image-upload" ) View All Images
      .idea-summary-data#idea-summary-components
        h4 Add a Component
        button(type="button" id="componentModalButton"  class="btn btn-default" data-toggle="modal" data-target="#addComponentModal") Add a Component

    .idea-function-column.half-column
      h3 Features
      if components
        ul
          each component in components
            li 
              h4 #{component['number']} : #{component['text']}
      .idea-summary-data#idea-summary-waste-values
        h4 Waste Value Scores
        a.btn.btn-default( href="/waste-values-summary" ) View All
        br
      .idea-summary-data#idea-summary-problems
        h4 Idea Problems
        button(type="button" id="problemModalButton"  class="btn btn-default" data-toggle="modal" data-target="#addProblemModal") Add a Problem
      .idea-summary-data#idea-summary-challenge
        h4 Challenge
        p <i>#{idea.problem}</i>
        a.btn.btn-default( href="/introduce-idea" ) Edit > 
        br
      .idea-summary-data#idea-summary-accomplish
        h4 Description
        p <i>#{idea.description}</i>
        a.btn.btn-default( href="/accomplish" ) Edit >
        br

.inventor-only-idea-summary
  h1 For the Inventor
  .half-column
    h4 Suggestions
    a.btn.btn-default( href="/suggestion-summary" ) Make Suggestions
    br
    br
    h4 Top Priority Problems 
    ul.problemList
      each problem, index in listOfProblems
        li
          p #{index + 1}. <b>#{problem[0]} : </b> #{problem[1]}
    a.btn.btn-default( href="/sort-problems" ) Sort All Problems
    br
  .half-column
    br
    h4 Application
    a.btn.btn-default( href="/create-application" ) Download Application
    br
    br
    h4 Variants 
    each variantDate in variantDates
      ul.variantDateList
        li
          a(href="/variant/"+variantDate[1]) #{variantDate[0]}
    a.btn.btn-default( href="/view-idea-suggestions" ) Create a New Variant
    br
    br

  #titleModal.modal.fade.annotate-modal(role="dialog")
    .modal-dialog
      .modal-content
        .modal-header
          button(type="button", class="close" data-dismiss="modal") &times;
          .modal-title 
            h2 Name Your Idea
        .modal-body
          form(role='form', id="saveIdeaName" action="/save-idea-name", method="post", style='max-width: 300px;', data-idea-doc=idea)
            .form-group
              input.form-control(type="text", name="inventionName", placeholder='...')
              p (ex. "Flux Capacitor", < 30 characters)
            .modal-footer
              button.btn.btn-info(data-dismiss="modal") Cancel
              button.btn.btn-success#submit(type='submit') Save

  #addProblemModal.modal.fade.annotate-modal(role="dialog")
    .modal-dialog
      .modal-content
        .modal-header
          button(type="button", class="close" data-dismiss="modal") &times;
          .modal-title 
            h2 Record a Current Problem
        .modal-body
          form(role='form', id="addIdeaProblem" action="/add-idea-problem", method="post", style='max-width: 300px;', data-idea-doc=idea)
            .form-group
              input#problemStatement.form-control(type="text", name="problemStatement", placeholder='The problem is...')
              p (ex. "It draws too much power", < 30 characters)
              h3 Select Problem Area:
              select.form-control#problemArea
                  option(value="None Selected") None Selected
                  each value in problemAreas
                    option(value=value) #{value}

            .modal-footer
              button.btn.btn-info(data-dismiss="modal") Cancel
              button.btn.btn-success#problemSubmit(type='submit') Save
  #addComponentModal.modal.fade.annotate-modal(role="dialog")
    .modal-dialog
      .modal-content
        .modal-header
          button(type="button", class="close" data-dismiss="modal") &times;
          .modal-title 
            h2 Record a New Component
        .modal-body
          form(role='form', id="addIdeaComponent" action="/add-idea-component", method="post", style='max-width: 300px;', data-idea-doc=idea)
            .form-group
              input#componentName.form-control(type="text", name="componentName", placeholder='The component is called...')
              p (ex. "The Start Button", < 30 characters)
              input#componentDescription.form-control(type="text", name="componentDescription", placeholder='The way it works is...')
              p (ex. "it initiates the sequence automatically", < 120 characters)

            .modal-footer
              button.btn.btn-info(data-dismiss="modal") Cancel
              button.btn.btn-success#componentSubmit(type='submit') Save

  button(type="button" id="titleModalButton" style="display:none;" class="btn btn-primary" data-toggle="modal" data-target="#titleModal") Go Win Fight


  include ../partials/js-includes.jade
  script(type="text/javascript").
    $(window).load(function(){
        if("!{idea.name}" == ""){
          $('#titleModal').modal('show');
        }
        if("!{idea.alternatives.length}" == "0"){
          $("#idea-summary-alternatives")
            .addClass("incomplete-data");
          $("#idea-summary-alternatives a")
            .before("<h4><i>No data entered</i></h4>");
        }
        if("!{idea.images.length}" == "0"){
          $("#idea-summary-annotate")
            .addClass("incomplete-data");
          $("#idea-summary-annotate a")
            .before("<h4><i>No data entered</i></h4>");
        }
        if("!{idea.description}" == ""){
          $("#idea-summary-accomplish")
            .addClass("incomplete-data");
          $("#idea-summary-accomplish a")
            .before("<h4><i>No data entered</i></h4>");
        }
        if("!{idea.problem}" == ""){
          $("#idea-summary-challenge")
            .addClass("incomplete-data");
          $("#idea-summary-challenge a")
            .before("<h4><i>No data entered</i></h4>");
        }
    });

    $("#problemSubmit").click(function(event){
      event.preventDefault();
      $.post('/add-idea-problem', 
        {
          problemStatement : $("#problemStatement").val(),
          problemArea : $("#problemArea option:selected").text()
        },
        function(resp) {
          $("#problemStatement").val('');
          $("#addProblemModal").modal('hide');
        });      
    });

    $("#componentSubmit").click(function(event){
      event.preventDefault();
      $.post('/add-idea-component', 
        {
          componentName : $("#componentName").val(),
          componentDescription : $("#componentDescription").val()
        },
        function(resp) {
          $("#componentName").val('');
          $("#componentDescription").val('');
          $("#addComponentModal").modal('hide');
        });      
    });
