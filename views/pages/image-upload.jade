doctype html
html
  head
    include ../partials/head.jade
  body
  .header
    include ../partials/header.jade

  .container
    h1 Visualize Your Concept
    form(role='form', id="formImageUpload" action="/image-upload", method="post", data-idea-doc=idea, enctype="multipart/form-data")
      .form-group
        h3 Use a pen and paper to sketch out your idea, take a photo of your sketch, and save it here. You can also save additional diagrams or photographs of your invention.
        |  
        input#fileInput(type="file", name="picture")
        br
        |  
        if reviewing
          a.btn.btn-default( href="/contributor-idea-summary/" + idea.name) Continue >
        else
          if(imageURLs.length && !idea.name)
            a.btn.btn-default( href="/idea-summary/yet-to-be-named" ) Continue >
          else if(imageURLs.length && idea.name)
            a.btn.btn-default( href="/idea-summary/#{idea.name}") Continue >
          else if(imageURLs.length == 0 && !idea.name)
            a.btn.btn-default( href="/idea-summary/yet-to-be-named" ) Skip to Profile
            |  
            a.btn.btn-default( href="/idea-summary/yet-to-be-named" disabled) Continue (+20)
          else if(imageURLs.length == 0 && idea.name)
            a.btn.btn-default( href="/idea-summary/#{idea.name}" ) Skip to Profile
            |  
            a.btn.btn-default( href="/idea-summary/#{idea.name}" disabled) Continue (+20)


          

  .imagesList.my-images
    if(imageURLs)
      h3 Your Images
      each imageURL in imageURLs
        if imageURL[2] == user.username
          a(href="/annotate-image/"+imageURL[0])
            img.imageListItems(src=imageURL[1] style=imageURL[3])

  .imagesList.other-images
    if(imageURLs)
      h3 All Other Uploaded Images
      h5 (Cannot Annotate)
      each imageURL in imageURLs
        if imageURL[2] != user.username
          img.imageListItems(src=imageURL[1] style=imageURL[3])



  include ../partials/js-includes.jade
  script(src='/exif.js')
  script(type="text/javascript").
    if($(".my-images img").length == 0){
      $(".my-images").append("<h4> No images uploaded yet.</h4>");
    } else {
      $(".my-images").append("<h4>Click to Annotate.</h4>");
    }

    document.getElementById("fileInput").onchange = function(event) {
      const files = document.getElementById('fileInput').files;
      const file = files[0];
      if(file == null){
        return alert('No file selected.');
      }
      var fr   = new FileReader;
      
      fr.onloadend = function() {
        // get EXIF data
        var exif = EXIF.readFromBinaryFile(this.result);

        if(file.size < 3000000){
          getSignedRequest(file, exif);
        } else if (file.size > 3000000){
          alert('Please choose an image smaller than 3 MB.')
        } else {
          alert('An error ocurred with this image.')
        }

      };

      fr.readAsArrayBuffer(file); // read the file


    };

    function uploadFile(file, signedRequest, url, exif){
      const xhr = new XMLHttpRequest();
      xhr.open('PUT', signedRequest);
      xhr.onreadystatechange = function() {
        if(xhr.readyState === 4){
          if(xhr.status === 200 && (file.type=="image/jpeg" || file.type=="image/png")){
            var data = {"filename" : file.name, "fileUrl" : url, "type" : file.type,
              exif : exif };
            $.post('/image-upload', data , function(response, status){
              window.location.replace(response["redirectURL"]);
            });
          }
          else{
            alert('Could not upload file.');
          }
        }
      };
      xhr.send(file);
    }

    function getSignedRequest(file, exif){
      const xhr = new XMLHttpRequest();
      xhr.open('GET', '/sign-s3?file-name='+file.name + '&file-type='+ file.type);
      xhr.onreadystatechange = function() {
        if(xhr.readyState === 4){
          if(xhr.status === 200){
            const response = JSON.parse(xhr.responseText);
            uploadFile(file, response.signedRequest, response.url, exif);
          }
          else{
            alert('Could not get signed URL.');
          }
        } 
        
      };
      xhr.send();
    }
