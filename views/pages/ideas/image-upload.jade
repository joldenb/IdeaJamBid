doctype html
html
  head
    include ../../partials/head.jade
  body
  .header.navbar.navbar-default
    include ../../partials/header.jade

  .container-fluid.idea-summary
    .row
      .col-xs-12
        h1 Images
    .row
      .col-md-3.lefthand-buttons
        .row
          .col-xs-12
            a.btn.btn-navigation.btn-lg(href="/ideas/#{idea.name}/edit") #{idea.name} Dashboard
        .row
          .col-xs-12
            a.btn.btn-navigation.btn-lg(href="/ideas/#{idea.name}/edit/aptitudes") Previous Step
        .row
          .col-xs-12
            a.btn.btn-navigation.btn-lg(href="/ideas/#{idea.name}/edit/component-details") Next Step
      .col-md-1
      .col-md-4
        form(role='form', id="formImageUpload" action="/image-upload", method="post", data-idea-doc=idea, enctype="multipart/form-data")
          .form-group
            input(type="hidden", name="_csrf", value="#{csrfToken}")
            label.btn.btn-block.btn-file#fileInput
              .upload-image-div
                span.glyphicon.glyphicon-cloud-upload.big-upload-icon
              input(type="file", name="picture" style="display:none;")
        h3(style="text-align:center;") Upload Image
      .col-md-4
    if(imageURLs.length > 0)
      .row
        .col-xs-12
          h3 Saved #{idea.name} Images
      each imageURL, index in imageURLs
        if( index % 3 == 0)
          .row
            if ( imageURL )
              .col-md-4
                .image-container
                  img.imageListItems(src=imageURL[1] style=imageURL[3])
            if ( imageURLs[index+1] )
              .col-md-4
                .image-container
                  img.imageListItems(src=imageURLs[index+1][1] style=imageURLs[index+1][3])
            if ( imageURLs[index+2] )
              .col-md-4
                .image-container
                  img.imageListItems(src=imageURLs[index+2][1] style=imageURLs[index+2][3])
    else
      h5 <i>No images uploaded yet</i>

  include ../../partials/js-includes.jade
  script(src='/exif.js')
  script(type="text/javascript").
    if($(".my-images img").length == 0){
      $(".my-images").append("<h4> No images uploaded yet.</h4>");
    } else {
      $(".my-images").append("<h4>Click to Annotate.</h4>");
    }

    if($("#fileInput [type='file']").length > 0){

      $("#fileInput [type='file']")[0].onchange = function(event) {
        $("<img id='spinner' src='/spinner.gif'>").insertBefore("#formImageUpload");
        const files = $("#fileInput [type='file']")[0].files;
        const file = files[0];
        const csrf = $("input[name='_csrf']").val();
        if(file == null){
          return alert('No file selected.');
        }
        var fr   = new FileReader;
        
        fr.onloadend = function() {
          // get EXIF data
          var exif = EXIF.readFromBinaryFile(this.result);

          if(file.size < 3000000){
            getSignedRequest(file, exif, csrf);
          } else if (file.size > 3000000){
            alert('Please choose an image smaller than 3 MB.')
          } else {
            alert('An error ocurred with this image.')
          }

        };

        fr.readAsArrayBuffer(file); // read the file


      };

      function uploadFile(file, signedRequest, url, exif, csrf){
        const xhr = new XMLHttpRequest();
        xhr.open('PUT', signedRequest);
        xhr.onreadystatechange = function() {
          if(xhr.readyState === 4){
            if(xhr.status === 200 && (file.type=="image/jpeg" || file.type=="image/png")){
              var data = {"filename" : file.name, "fileUrl" : url, "type" : file.type,
                exif : exif, "_csrf" : csrf };
              $.post('/image-upload', data , function(response, status){
                window.location.reload(true);
              });
            }
            else{
              alert('Could not upload file.');
            }
          }
        };
        xhr.send(file);
      }

      function getSignedRequest(file, exif, csrf){
        const xhr = new XMLHttpRequest();
        var filename = file.name.split(".");
        filename[0] = filename[0] + "-" + Date.now().toString();
        filename = filename.join(".");
        xhr.open('GET', '/sign-s3?file-name='+ filename + '&file-type='+ file.type);
        xhr.onreadystatechange = function() {
          if(xhr.readyState === 4 && xhr.responseText != ""){
            if(xhr.status === 200){
              var response = JSON.parse(xhr.responseText);
              uploadFile(file, response.signedRequest, response.url, exif, csrf);
            }
            else{
              alert('Could not get signed URL.');
            }
          } 
          
        };
        xhr.send();
      }
    }
